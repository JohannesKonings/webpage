{"version":3,"sources":["webpack://abap-observability-tools/./src/templates/advanced.js"],"names":["Advanced","render","this","props","section","section_idx","component","Component","components","key","site","pageContext","React"],"mappings":"oSAgBqBA,E,6FACjBC,OAAA,WAAU,IAAD,OACL,OACI,gBAAC,KAAWC,KAAKC,MAChB,IAAM,IAAMD,KAAKC,MAAO,mCAAoC,OAAO,SAACC,EAASC,GAC1E,IAAIC,EAAY,IAAa,IAAY,IAAMF,EAAS,OAAQ,QAC5DG,EAAYC,KAAWF,GAC3B,OACE,gBAACC,EAAD,eAAWE,IAAKJ,GAAiB,EAAKF,MAAtC,CAA6CC,QAASA,EAASM,KAAM,EAAKP,MAAMQ,YAAYD,a,GARxEE","file":"component---src-templates-advanced-js-1d8f7d228b4081f1b1a0.js","sourcesContent":["import React from 'react';\nimport _ from 'lodash';\nimport {graphql} from 'gatsby';\n\nimport components, {Layout} from '../components/index';\n\n// this minimal GraphQL query ensures that when 'gatsby develop' is running,\n// any changes to content files are reflected in browser\nexport const query = graphql`\n  query($url: String) {\n    sitePage(path: {eq: $url}) {\n      id\n    }\n  }\n`;\n\nexport default class Advanced extends React.Component {\n    render() {\n        return (\n            <Layout {...this.props}>\n            {_.map(_.get(this.props, 'pageContext.frontmatter.sections', null), (section, section_idx) => {\n                let component = _.upperFirst(_.camelCase(_.get(section, 'type', null)));\n                let Component = components[component];\n                return (\n                  <Component key={section_idx} {...this.props} section={section} site={this.props.pageContext.site} />\n                )\n            })}\n            </Layout>\n        );\n    }\n}\n"],"sourceRoot":""}